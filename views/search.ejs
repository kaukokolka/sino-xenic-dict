<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Search Results</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <header>
    <h1>Sino-Xenic Dictionary </h1>
  </header>
  <form id="search-form" action="/search" method="GET">
    <input type="text" name="query" placeholder="Search characters & words by their characters, readings, or meanings" value="<%= query %>">
    <button type="submit">Search</button>
  </form>

  <h1>Search Results for "<%= query %>"</h1>

  <h2>Characters</h2>

  <% if (characters.length > 0) { %>
  <table>
    <tr>
      <th>Character</th>
      <th>Meaning</th>
      <th>CN</th>
      <th>KR</th>
      <th>On'yomi</th>
      <th>Kun'yomi</th>
    </tr>
    <% characters.forEach(char => { %>
      <tr>
        <td><%= char.char %></td>
        <td><%= char.meaning %></td>
        <td><%= char.reading_cn %></td>
        <td><%= char.reading_kr %></td>
        <td><%= char.reading_jp_on %></td>
        <td><%= char.reading_jp_kun %></td>
      </tr>
    <% }) %>
  </table>
<% } else { %>
  <p>ʅ ( ․ ⤙ ․) ᶴ   Sorry. No matching characters.</p>
<% } %>

<hr>

<h2>Words</h2>

<!-- Reuse the word table from before -->
<% if (words.length > 0) { %>
  <table>
    <tr>
      <th>Word</th>
      <th>Language</th>
      <th>Meaning</th>
      <th>Reading</th>
      <th>Collections test</th>
      <th>Actions</th>
    </tr>
    <% words.forEach(item => { %>
      <tr>
        <td><%= item.word %></td>
        <td><%= item.language %></td>
        <td><%= item.meaning %></td>
        <td><%= item.reading %></td>
        <td>
          <div class="dropdown" data-word-id="<%= item.word_id %>">
            <button class="dropdown-button" onclick="toggleDropdown(this)">Add to collection ▼</button>
            <div class="dropdown-content">
              <div onclick="selectCollection('__create__', this)"><b>+ Create new collection</b></div>
              <% collections.forEach(c => { %>
              <div onclick="selectCollection('<%= c.name %>', this)"><%= c.name %></div>
              <% }) %>
            </div>
          </div>
        </td>
        <td><a href="/words/<%= item.word %>">See page</a></td>
      </tr>
    <% }) %>
  </table>
<% } else { %>
  <p>ʅ ( ․ ⤙ ․) ᶴ   Sorry. No matching words.</p>
<% } %>

<script>
  function test() {
    console.log('test');
  }

  function toggleDropdown(button) {
    const dropdown = button.closest('.dropdown');
    dropdown.classList.toggle('show');
  }

  function selectCollection(name, item) {
    const dropdown = item.closest('.dropdown');
    const wordId = dropdown.getAttribute('data-word-id');

    if (name === '__create__') {
      const newName = prompt('Enter new collection name:');
      if (!newName || newName.trim() === '') return;

      const wordId = item.closest('.dropdown').getAttribute('data-word-id');

      fetch('/create-and-add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          name: newName.trim(),
          word_id: wordId
        })
      })
      .then(res => {
        if (res.ok) {
          console.log('Collection created and word added!');
          window.location.reload();
        } else {
          res.text().then(message => {
            alert(message || 'Something went wrong');
          });
        }
      });

      dropdown.classList.remove('show');
      return;
      }

    fetch('/add-to-collection', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        wordId: wordId,
        collectionName: name
      })
    })
    .then(res => {
      if (res.ok) {
        console.log('Word added to collection!');
      } else {
        console.error('Failed to add word');
      }
    })
    .catch(err => {
      console.error('Network or server error:', err);
    });

    dropdown.classList.remove('show');
  }

  // Aizvert dropdown clickojot ara no dropdown ja kads ir atverts
  window.addEventListener('click', function(e) {
    document.querySelectorAll('.dropdown.show').forEach(dropdown => {
      if (!dropdown.contains(e.target)) {
        dropdown.classList.remove('show');
      }
    });
  });
</script>
</body>
</html>
