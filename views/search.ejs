<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Sino-Xenic Dictionary - "<%= query %>"</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <header>
    <h1 class="logo"><a href="/">Sino-Xenic Dictionary</a></h1>
      <div id="usern-dropdown" class="dropdown">
        <div id="usern-shower" class="usern-shower" onclick="toggleDropdown(this)">
          <span id="usern-span" class="usern-span"></span>
          <span id="usern-preferences" class="usern-pref"></span>
        </div>
        <div class="usern-dropdown-content">
          <div onclick="location.href='/collections'">My Collections</a></div>
          <div onclick="location.href='/add'" id="add-words-button">Add Words</a></div>
          <div onclick="location.href='/logout'" style="color: red;">Sign Out</a></div>
        </div>
      </div>
  </header>
  <form id="search-form" action="/search" method="GET">
    <input type="text" name="query" placeholder="Search characters & words by their characters, readings, or meanings" value="<%= query %>">
    <button type="submit">Search</button>
  </form>

  <h3 style="color: grey;">Search Results for "<%= query %>"</h3>

  <h2>Characters</h2>

  <% if (characters.length > 0) { %>
    <div class="char-grid">
      <% characters.forEach(char => { %>
        <div class="char-card" onclick="location.href='/search?query=<%= char.char %>'">
          <div class="char-big"><%= char.char %></div>
          <div class="char-info">
            <div><strong>Meaning:</strong> <%= char.meaning %></div>
            <div><strong>Mandarin:</strong> <%= char.reading_cn %></div>
            <div><strong>Korean:</strong> <%= char.reading_kr %></div>
            <div><strong>On'yomi:</strong> <%= char.reading_jp_on %></div>
            <div><strong>Kun'yomi:</strong> <%= char.reading_jp_kun %></div>
            <div class="charedit noadmin"><a href="/edit/char/<%= char.char_id %>">Edit</a></div>
          </div>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <p>ʅ ( ․ ⤙ ․) ᶴ   Sorry. No matching characters.</p>
  <% } %>


<hr>

<h2>Words</h2>

<!-- Reuse the word table from before -->
<% if (words.length > 0) { %>
  <table class="search-table">
    <tr>
      <th>Word</th>
      <th>Language</th>
      <th>Reading</th>
      <th>Meaning</th>
      <th>Actions</th>
    </tr>
    <% words.forEach(item => { %>
      <tr>
        <td><%= item.word %></td>
        <td><%= item.language %></td>
        <td><%= item.reading %></td>
        <td><%= item.meaning %></td>
        <td>
          <div class="dropdown" data-word-id="<%= item.word_id %>">
            <button class="dropdown-button" onclick="toggleDropdown(this)">Add to collection ▼</button>
            <div class="dropdown-content">
              <div class="dropdown-create" onclick="selectCollection('__create__', this)"><b>+ Create new collection</b></div>
              <% collections.forEach(c => { %>
              <div onclick="selectCollection('<%= c.name %>', this)"><%= c.name %></div>
              <% }) %>
            </div>
          </div>
          <button class="word-search-button" onclick="location.href='/search?query=<%= item.word %>'">See page</button>
          <a href="/edit/word/<%= item.word_id %>" class="wordedit noadmin">Edit</a>
        </td>
      </tr>
    <% }) %>
  </table>
<% } else { %>
  <p>ʅ ( ․ ⤙ ․) ᶴ   Sorry. No matching words.</p>
<% } %>

<script>
/*for usern*/
fetch('/user')
  .then(res => res.json())
  .then(user => {
    const span = document.getElementById('usern-span');
    const pref = document.getElementById('usern-preferences');
    const drop = document.getElementById('usern-dropdown');
    const shower = document.getElementById('usern-shower');
    const addwbtn = document.getElementById('add-words-button');
    const editButtons = document.querySelectorAll('.wordedit');
    const editCharButtons = document.querySelectorAll('.charedit');

    if (user.loggedIn) {
      if (user.admin) {
        span.innerText = `${user.username} (admin)`;
        addwbtn.style.display = 'block';
        editButtons.forEach(ebtn => {
          ebtn.classList.remove('noadmin');
        })
        editCharButtons.forEach(cbtn => {
          cbtn.classList.remove('noadmin');
        })
      } else {
        span.innerText = user.username;
        addwbtn.style.display = 'none';
      }
      pref.innerText = '▼';
      drop.classList.remove('unauthorized');
    } else {
      // ja nav ielogots, rada sign in or sign up username vieta
      span.innerHTML = `
        <a href="/signin" class="login-link">Sign in or Sign up</a>
      `;
      drop.classList.add('unauthorized');
      //
      const createButtons = document.querySelectorAll('.dropdown-create');
      createButtons.forEach(btn => {
        btn.innerHTML = `<span style="color: grey;"><a href="/signin">Sign in</a> to use collections</span>`;
        btn.onclick = null; // prevent interaction
        btn.style.cursor = 'default';
      });
    }
  })
  .catch(err => {
    console.error('Error fetching user info:', err);
  });

  function toggleDropdown(button) {
    const dropdown = button.closest('.dropdown');
    if (dropdown.classList.contains('unauthorized')) return; // don't open for logged-out users
    dropdown.classList.toggle('show');
  }
/*end for usern*/
  function selectCollection(name, item) {
    const dropdown = item.closest('.dropdown');
    const wordId = dropdown.getAttribute('data-word-id');

    if (name === '__create__') {
      const newName = prompt('Enter new collection name:');
      if (!newName || newName.trim() === '') return;

      const wordId = item.closest('.dropdown').getAttribute('data-word-id');

      fetch('/create-and-add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          name: newName.trim(),
          word_id: wordId
        })
      })
      .then(res => {
        if (res.ok) {
          console.log('Collection created and word added!');
          window.location.reload();
        } else {
          res.text().then(message => {
            alert(message || 'Something went wrong');
          });
        }
      });

      dropdown.classList.remove('show');
      return;
      }

    fetch('/add-to-collection', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        wordId: wordId,
        collectionName: name
      })
    })
    .then(res => {
      if (res.ok) {
        console.log('Word added to collection!');
      } else {
        console.error('Failed to add word');
      }
    })
    .catch(err => {
      console.error('Network or server error:', err);
    });

    dropdown.classList.remove('show');
  }

  // Aizvert dropdown clickojot ara no dropdown ja kads ir atverts
  window.addEventListener('click', function(e) {
    document.querySelectorAll('.dropdown.show').forEach(dropdown => {
      if (!dropdown.contains(e.target)) {
        dropdown.classList.remove('show');
      }
    });
  });
</script>
</body>
</html>
